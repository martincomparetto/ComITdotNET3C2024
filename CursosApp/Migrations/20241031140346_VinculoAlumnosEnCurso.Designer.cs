// <auto-generated />
using System;
using CursosApp.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CursosApp.Migrations
{
    [DbContext(typeof(CursosAppContext))]
    [Migration("20241031140346_VinculoAlumnosEnCurso")]
    partial class VinculoAlumnosEnCurso
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CursosApp.Model.Alumno", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CursoID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("DNI")
                        .HasColumnType("bigint");

                    b.Property<DateOnly?>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Trabaja")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("CursoID");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("CursosApp.Model.Curso", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CantidadMaximaAlumnos")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProfesorPrincipalID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ProfesorPrincipalID");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("CursosApp.Model.Profesor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AñosExperiencia")
                        .HasColumnType("int");

                    b.Property<long>("DNI")
                        .HasColumnType("bigint");

                    b.Property<DateOnly?>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Materia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Profesores");
                });

            modelBuilder.Entity("CursosApp.Model.Alumno", b =>
                {
                    b.HasOne("CursosApp.Model.Curso", null)
                        .WithMany("AlumnoList")
                        .HasForeignKey("CursoID");
                });

            modelBuilder.Entity("CursosApp.Model.Curso", b =>
                {
                    b.HasOne("CursosApp.Model.Profesor", "ProfesorPrincipal")
                        .WithMany()
                        .HasForeignKey("ProfesorPrincipalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfesorPrincipal");
                });

            modelBuilder.Entity("CursosApp.Model.Curso", b =>
                {
                    b.Navigation("AlumnoList");
                });
#pragma warning restore 612, 618
        }
    }
}
